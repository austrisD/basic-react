[{"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\index.js":"1","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\reportWebVitals.js":"2","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\App.js":"3","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\MainComponent.js":"4","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\DishDetailComponent.js":"5","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\FooterComponent.js":"6","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\HeaderComponent.js":"7","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\MenuComponent.js":"8","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\dishes.js":"9","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\HomeComponent.js":"10","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\ContactComponent.js":"11","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\promotions.js":"12","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\leaders.js":"13","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\comments.js":"14","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\AboutComponent.js":"15","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\configureStore.js":"16","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\DishdetailComponent.js":"17","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\comments.js":"18","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\dishes.js":"19","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\promotions.js":"20","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\leaders.js":"21","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\ActionTypes.js":"22","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\ActionCreators.js":"23","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\LoadingComponent.js":"24","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\forms.js":"25","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\baseUrl.js":"26"},{"size":596,"mtime":1608204056758,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1607357823122,"results":"29","hashOfConfig":"28"},{"size":503,"mtime":1608994357835,"results":"30","hashOfConfig":"28"},{"size":3636,"mtime":1609603918972,"results":"31","hashOfConfig":"28"},{"size":7383,"mtime":1609604372281,"results":"32","hashOfConfig":"28"},{"size":3026,"mtime":1608203824531,"results":"33","hashOfConfig":"28"},{"size":4921,"mtime":1609605245198,"results":"34","hashOfConfig":"28"},{"size":1770,"mtime":1609604116592,"results":"35","hashOfConfig":"28"},{"size":1336,"mtime":1608213061468,"results":"36","hashOfConfig":"28"},{"size":1499,"mtime":1609604975536,"results":"37","hashOfConfig":"28"},{"size":9357,"mtime":1609414727751,"results":"38","hashOfConfig":"28"},{"size":436,"mtime":1608211501909,"results":"39","hashOfConfig":"28"},{"size":2339,"mtime":1608211532918,"results":"40","hashOfConfig":"28"},{"size":3769,"mtime":1608213060108,"results":"41","hashOfConfig":"28"},{"size":3679,"mtime":1608384958171,"results":"42","hashOfConfig":"28"},{"size":742,"mtime":1609414287562,"results":"43","hashOfConfig":"28"},{"size":6411,"mtime":1609187807505,"results":"44","hashOfConfig":"28"},{"size":633,"mtime":1609603819470,"results":"45","hashOfConfig":"28"},{"size":608,"mtime":1609344385604,"results":"46","hashOfConfig":"28"},{"size":622,"mtime":1609603824513,"results":"47","hashOfConfig":"28"},{"size":173,"mtime":1609189275851,"results":"48","hashOfConfig":"28"},{"size":411,"mtime":1609602279436,"results":"49","hashOfConfig":"28"},{"size":3217,"mtime":1609696020310,"results":"50","hashOfConfig":"28"},{"size":235,"mtime":1609344816158,"results":"51","hashOfConfig":"28"},{"size":159,"mtime":1609413858075,"results":"52","hashOfConfig":"28"},{"size":50,"mtime":1609602025082,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"diqsbi",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\index.js",[],["110","111"],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\reportWebVitals.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\App.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\MainComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\DishDetailComponent.js",["112","113","114"],"import React, { Component } from \"react\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Col,\r\n  Label,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nimport { baseUrl } from \"../global/baseUrl\";\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DishesDetail = (props) => {\r\n  const timeConverter = (timeStamp) => {\r\n    const monthNames = [\r\n      \"+1\",\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n\r\n    const timeObj = new Date(timeStamp);\r\n    const month = monthNames[timeObj.getMonth()];\r\n    const date = timeObj.getMonth();\r\n    const year = timeObj.getFullYear();\r\n    return `, ${month} ${date},${year}`;\r\n  };\r\n\r\n  const RenderDish = ({ dish }) => {\r\n    return (\r\n      <div className=\"col-12 col-md5 m-1\">\r\n        <Card>\r\n          <CardImg top src={baseUrl  + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  class CommentForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isModalOpen: props.status,\r\n      };\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleComment = this.handleComment.bind(this);\r\n    }\r\n    toggleModal() {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen,\r\n      });\r\n    }\r\n    handleComment(event) {\r\n      this.toggleModal();\r\n      console.log(event);\r\n      alert(\r\n        \"Rating: \" +\r\n          event.Rating +\r\n          \" username: \" +\r\n          event.username +\r\n          \" Comment: \" +\r\n          event.Comment\r\n      );\r\n      this.props.addComment(\r\n        this.props.dishId,\r\n        event.Rating,\r\n        event.username,\r\n        event.Comment\r\n      );\r\n      // event.preventDefault();\r\n    }\r\n    render() {\r\n      const required = (val) => val && val.length;\r\n\r\n      return (\r\n        <>\r\n          <Button outline onClick={this.toggleModal}>\r\n            <span className=\"fa fa-pencil\"></span> Submit Comment\r\n          </Button>\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n              <LocalForm onSubmit={this.handleComment}>\r\n                <Col>\r\n                  <Label for=\"Rating\">Rating</Label>\r\n                  <Control.select\r\n                    model=\".Rating\"\r\n                    name=\"Rating\"\r\n                    id=\"Rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                  </Control.select>\r\n                </Col>\r\n                <Col>\r\n                  <Label htmlFor=\"username\">Your Name</Label>\r\n                  <Control.text\r\n                    model=\".username\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: (val) => val && val.length >= 2,\r\n                      maxLength: (val) => !val || val.length <= 15,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".username\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be more then 2 characters\",\r\n                      maxLength: \"No more then 15 characters\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Label for=\"Comment\">Comment</Label>\r\n                  <Control.textarea\r\n                    model=\".Comment\"\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    rows=\"4\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: (val) => val && val.length >= 10,\r\n                      maxLength: (val) => !val || val.length <= 50,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".Comment\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Minimum 10 characters\",\r\n                      maxLength: \"No more then 50 characters\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  const RenderComments = ({ comments, addComment, dishId }) => {\r\n    return comments != null ? (\r\n      <div className=\"col-12 col-md-5 m-1\" style={{ maxWidth: \"none\" }}>\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\">\r\n          {comments.map((comment) => {\r\n            return (\r\n              <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>\r\n                  -- {comment.author}, {timeConverter(comment.date)}\r\n                </p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <CommentForm dishId={dishId} addComment={addComment} />\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderComments\r\n              comments={props.comments}\r\n              addComment={props.addComment}\r\n              dishId={props.dish.id}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DishesDetail;\r\n","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\FooterComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\HeaderComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\MenuComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\dishes.js",[],["115","116"],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\HomeComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\ContactComponent.js",["117","118","119","120","121","122","123","124","125"],"import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Current State is: \" + JSON.stringify(values));\r\n    this.props.resetFeedbackForm();\r\n    // event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      validEmail: \"Invalid Email Address\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\promotions.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\leaders.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\comments.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\AboutComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\configureStore.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\DishdetailComponent.js",["126","127","128","129","130"],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\comments.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\dishes.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\promotions.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\leaders.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\ActionTypes.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\ActionCreators.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\components\\LoadingComponent.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\redux\\forms.js",[],"C:\\Users\\AustrisD\\Desktop\\basic-react\\src\\global\\baseUrl.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":112,"column":19,"nodeType":"137","endLine":117,"endColumn":20},{"ruleId":"135","severity":1,"message":"138","line":127,"column":19,"nodeType":"137","endLine":137,"endColumn":21},{"ruleId":"135","severity":1,"message":"139","line":151,"column":19,"nodeType":"137","endLine":162,"endColumn":21},{"ruleId":"131","replacedBy":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":10,"column":33,"nodeType":"144","messageId":"145","endLine":10,"endColumn":40},{"ruleId":"146","severity":1,"message":"147","line":83,"column":15,"nodeType":"137","endLine":83,"endColumn":57},{"ruleId":"135","severity":1,"message":"138","line":110,"column":19,"nodeType":"137","endLine":121,"endColumn":21},{"ruleId":"135","severity":1,"message":"138","line":139,"column":19,"nodeType":"137","endLine":150,"endColumn":21},{"ruleId":"135","severity":1,"message":"138","line":168,"column":19,"nodeType":"137","endLine":180,"endColumn":21},{"ruleId":"135","severity":1,"message":"138","line":199,"column":19,"nodeType":"137","endLine":209,"endColumn":21},{"ruleId":"135","severity":1,"message":"148","line":225,"column":23,"nodeType":"137","endLine":229,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":235,"column":19,"nodeType":"137","endLine":239,"endColumn":20},{"ruleId":"135","severity":1,"message":"139","line":250,"column":19,"nodeType":"137","endLine":256,"endColumn":21},{"ruleId":"142","severity":1,"message":"149","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"150","line":14,"column":3,"nodeType":"144","messageId":"145","endLine":14,"endColumn":8},{"ruleId":"135","severity":1,"message":"136","line":122,"column":19,"nodeType":"137","endLine":127,"endColumn":20},{"ruleId":"135","severity":1,"message":"138","line":137,"column":19,"nodeType":"137","endLine":147,"endColumn":21},{"ruleId":"135","severity":1,"message":"139","line":161,"column":19,"nodeType":"137","endLine":172,"endColumn":21},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["151"],["152"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'useState' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]